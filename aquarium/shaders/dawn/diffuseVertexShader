#version 450

layout(std140, set = 1, binding = 0) uniform LightWorldPositionUniform {
     vec3 lightWorldPos;
} lightWorldPositionUniform;

struct ViewUniforms
{
    mat4 viewProjection;
    mat4 viewInverse;
    mat4 world;
    mat4 worldInverseTranspose;
    mat4 worldViewProjection;
};

layout(std140, set = 3, binding = 0) uniform WorldUniforms {
	ViewUniforms views[20];
} worldUniforms;

layout(location = 0) in vec4 position;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec2 texCoord;

layout(location = 0) out vec4 v_position;
layout(location = 1) out vec2 v_texCoord;
layout(location = 2) out vec3 v_normal;
layout(location = 3) out vec3 v_surfaceToLight;
layout(location = 4) out vec3 v_surfaceToView;
void main() {
  v_texCoord = texCoord;
  v_position = (worldUniforms.views[gl_InstanceIndex].worldViewProjection * position);
  v_normal = (worldUniforms.views[gl_InstanceIndex].worldInverseTranspose * vec4(normal, 0)).xyz;
  v_surfaceToLight = lightWorldPositionUniform.lightWorldPos - (worldUniforms.views[gl_InstanceIndex].world * position).xyz;
  v_surfaceToView = (worldUniforms.views[gl_InstanceIndex].viewInverse[3] - (worldUniforms.views[gl_InstanceIndex].world * position)).xyz;
  v_position.y = -v_position.y;
  gl_Position = v_position;
}