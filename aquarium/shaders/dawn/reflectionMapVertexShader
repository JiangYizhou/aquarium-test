#version 450

layout(std140, set = 0, binding = 0) uniform LightWorldPositionUniform {
    vec3 lightWorldPos;
} lightWorldPositionUniform;

layout(std140, set = 1, binding = 0) uniform ViewUniforms {
	mat4 viewProjection;
	mat4 viewInverse;
    mat4 world;
	mat4 worldInverseTranspose;
    mat4 worldViewProjection;
} viewUniforms;

layout(location = 0) in vec4 position;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec2 texCoord;
layout(location = 3) in vec3 tangent;
layout(location = 4) in vec3 binormal;
layout(location = 0) out vec4 v_position;
layout(location = 1) out vec2 v_texCoord;
layout(location = 2) out vec3 v_tangent;
layout(location = 3) out vec3 v_binormal;
layout(location = 4) out vec3 v_normal;
layout(location = 5) out vec3 v_surfaceToLight;
layout(location = 6) out vec3 v_surfaceToView;
void main() {
  v_texCoord = texCoord;
  v_position = (viewUniforms.worldViewProjection * position);
  v_normal = (viewUniforms.worldInverseTranspose * vec4(normal, 0)).xyz;
  v_surfaceToLight = lightWorldPositionUniform.lightWorldPos - (viewUniforms.world * position).xyz;
  v_surfaceToView = (viewUniforms.viewInverse[3] - (viewUniforms.world * position)).xyz;
  v_binormal = (viewUniforms.worldInverseTranspose * vec4(binormal, 0)).xyz;
  v_tangent = (viewUniforms.worldInverseTranspose * vec4(tangent, 0)).xyz;
  gl_Position = v_position;
}